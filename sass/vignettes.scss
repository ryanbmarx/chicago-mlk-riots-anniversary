// Enables Tribune colors, but is required for everything.
@import 'base-variables';
@import 'riots-config';
@import 'base-config'; 

$vignette-divider-color: #aaa;

// Required for everything, too, but can be broken down into smaller explicit imports if desired. 
@import 'base-mixins';


@import 'vignettes-header';

.container {
	max-width: 1000px;	
}

.vignettes-nav{display:none;}


.vignette{
	margin: #{$grid-gap * -3} 0 0 0;
	padding: #{$grid-gap * 3} 0 #{$grid-gap * 2} 0;
	position:relative;
	
	&:after{
		content:"";
		display:block;
		background: $vignette-divider-color;
		height: 2px;
		width: 200px;
		position: absolute;
		bottom: $grid-gap;
		left: 50%;
		transform: translate(-50%, 50%);
	}

	&:before{
		content: "\25C6";
		font-size: 1.5em;
		color: $vignette-divider-color;
		line-height: 1.1em;
		position: absolute;
		bottom: $grid-gap;
		left: 50%;
		transform: translate(-50%, .5em);
		

	}
	&:last-child{
		&:before, &:after{ content: none; }
	}

	&__kicker{
		@include sans-serif-text(16px, 1em, bold);
		text-align:center;
	}

	&__name{
		@include sans-serif-text(35px, 1em, bold);
		text-align:center;
		margin: 0 0 #{$grid-gap / 2} 0
	}

	&__description{
		@include sans-serif();
		font-style: italic;
		margin: 0 0 #{$grid-gap/2} 0;
		text-align:center;

	}
	&__quote{
		@include serif-text(20px, 1.5em, normal);
		padding: 0;
		text-align: center;
		font-style:italic;
		margin: 0 0 #{$grid-gap/2} 0;
		
		&-attribution{
			@include agate();
			text-align:center;

			&:before{
				content: "â€” ";
			}
		}

		&--2{
			margin-top: $grid-gap;
		}
	}

	&__video{
		margin: $grid-gap auto;

		.video-wrapper{
			@include responsive-embed();
		}

		.video-js{
			// This replaces the <video> element when using brightcove embeds,
			position: absolute;
		    top: 0;
		    left: 0;
		    width: 100%;
		    height: 100%;
		}
	}

	&__photo{
		@include trib-image();
	}
}

.vignette--quote-only{
	.vignette__quote{ font-size: 2em; }
	.vignette__quote-attribution{font-weight: bold;}
}


.deck {
	@include serif-text(35px, 1.3em);
	text-align: center;
}

@media all and (min-width: $desktop-min-width){
	.vignettes-nav{
		display:block;
	}

	// ########################################################
	// Set up the overall container for the vignettes page
	// ########################################################

	@supports (display:grid){
		// If the browser supports grid, we should use grid. EASIER!

		.vignettes-container{
			display:grid;
			// Make two columns, one with an explicit width and one with 100% of the remaining 
			// width (minus the grid gap between columns, of course).
			grid-template-columns: $vignettes-nav-width 1fr;
			grid-gap: $grid-gap;
		}

		.vignettes-nav{
			// This puts the nav into column 1
			grid-colum: 1;
		}

		.vignettes-column{
			grid-column: 2/-1;
		}
	}

	@supports not (display:grid){
		// If the browser does not support grid, then use flex.

		.vignettes-container{
			display:flex;
			justify-content: center;
			flex-wrap:wrap;
		}

		.vignettes-nav{
			// This puts the nav into column 1
			flex: 1 1 $vignettes-nav-width;
			// background:blue;
		}

		.vignettes-column{
			flex: 1 1 $vignettes-min-width;
			// background:red;
			// margin-right: $grid-gap;
		}
	}

	// ########################################################
	// THE REST OF THE STYLES FOR THE CAPSULES
	// ########################################################


	.capsules{
		list-style:none;
	    margin: 0;
	    padding: 0;
		position:sticky;
		top: $grid-gap + $navbar-overall-height;
	}
	.capsule{
		padding: $grid-gap / 3;
		box-sizing: border-box;
		position: relative;

		// This will apply transition to all elements, as they change between
		// active, :hover and the like
		& > * { transition: all 150ms ease;}

		&__link{
			display:flex;
			align-items:center;
			justify-content:flex-start;
		    color: #555;
		    cursor:pointer;

		    z-index: 10;
		    position:relative;

		    &:hover{
		    	text-decoration:none;
		    }
		}

		&__image{
			width: $capsule-image-width;
			border-radius: 50%;
			border: 7px solid #eee;
			margin-right: $grid-gap / 2;

			// SO the image sits on top of the slidey background
		    position: relative;
		    z-index: 10;

		    img{
		    	// To *help* remedy pixelation on upscaled images.
				image-rendering: pixelated;
				image-rendering: -moz-crisp-edges;
				image-rendering: crisp-edges;
		    }
		}

		&__text{
			@include sans-serif();
			text-transform: uppercase;
		}
		
		&:after{
			content:"";
			display:block;
			background: rgba(black, .2);
			border-radius: 0 5px 5px 0 ;

			position: absolute;
			top: 0;
			left:0;
			width: 100%;
			height: 100%;

			transform:translate(-100%,0);
			transition: all $capsule-transition-time ease;
		}

		&:hover {
			
			&:after{
				transition: all $capsule-transition-time ease;
				background: rgba(black, .1);
				transform:translate(0,0);
			}

		}

		&.capsule--active, &.capsule--active:hover{
			
			&:after{
				transition: all $capsule-transition-time ease;
				background: rgba(black, .2);
				transform:translate(0,0);
			}
			.capsule__text{font-weight: bold;}
			.capsule__link{color:black;}
		}
	}



}