@import 'base-variables';
@import 'base-config'; // If you are using the off-platform blueprint, uncomment this.
@import 'riots-config'; 

@import 'base-mixins';

// This is here and not in the riots config because it uses the set-text-color 
// function, which is not imported until after the variables
$base-text-color: #{set-text-color($color-background-main, true)};

@import 'base-pullquote'; // If you want to start over with the pullquote design, remove this import
@import 'base-photos-and-arrangements';

// theming

p{
	color: $base-text-color;
}

body{
	background: $color-background-main;
}


h3{
	// These are story breakers and should remain the top-level header inside a story.
	@include sans-serif-text(28px, 1.2em, 700);
	color: $base-text-color;
	margin: #{$grid-gap} 0 #{$grid-gap / 2} 0;
    border-left: 1em solid $trib-red2;
    padding-left: .5em;
}

.trib-pullquote {
	blockquote, figcaption{ color: $base-text-color; }
}

.container{
	// background: lightgreen;
	max-width: $container-max-width;
	padding: $container_padding_h;
	position: relative;
}

.story .river{
	// We only want rivers inside our main story container to do this
	max-width: $river-text-width;
	margin: 0 auto;
	position: static;
}

.side{
	// this class will bump it's element into the media column on desktop
	margin: $grid-gap 0;

}

.graphic-wrapper{
	padding: 20px;
	box-sizing:border-box;
	background:white;
	margin: $grid-gap 0;
	img {width: 100%;}
	p{
		@include sans-serif();
		margin: auto;
		color: #{set-text-color(darkblue, true)};
		
	}

	.chart-headline{
		@include label7();
		color:black;
	}

	.chart-describer{
		@include sans-serif();
		color:black;
	}

	.chart-subheadline{
		font-weight:bold;
		color:black;
		margin-top: $grid-gap / 2;
	}
}

.chart{
	height: 200px;
	& + .chart {
		margin-top: $grid-gap / 2;
	}
}



// The map graphic elements here

.map-wrapper{
	margin: $grid-gap 0;
	&--traveler{
		// This is the side-saddle map
		display:none;
	}
}

.map{
	display:contents;

	img{ width: 100%;}
}

.map-waypoint--visible{
	background: $trib-gray4;
	color: #{set-text-color($trib-gray4, true)};
}

.map-layer{
	position:absolute;
	top:0;
	left: 0;
	opacity:0;
	transition: opacity 150ms ease;

	&--visible{
		opacity:1;
		transition: opacity 150ms ease;
	}

}

@media all and (min-width: $tablet-landscape-min-width){

	.story .river{
		// width: $river-text-width;
		margin: 0 ;
		// background: yellow;
		// position: static;

	}


	.side{
		width: calc(100% - #{$graphic-left-edge} - #{$container_padding_h * 2});
		position: absolute;
		left: $graphic-left-edge;
		margin: 0;
	}

	.graphic-wrapper{
		// For the side-saddle graphics
		width: calc(100% - #{$graphic-left-edge} - #{$container_padding_h * 2});
		position: absolute;
		left: $graphic-left-edge;
		margin: 0;
		padding: 20px;
		box-sizing:border-box;
		background:white;
	}

	.map-wrapper{
		display:none;
		&--traveler{
			display:block;
			margin: 0;
			width: calc(100% - #{$graphic-left-edge} - #{$container_padding_h});
			position: absolute;
			left: $graphic-left-edge;
			min-height: 600px;
			height: 100%; // Since this is positioned absolutely, 100% height should stretch it to the full height of the container
		}
	}

	.map{
		position:sticky;
		top: #{$grid-gap + $navbar-overall-height};
		display:block;
		// This max height makes sure it is vertically centered in shorter 
		// viewports and not forced into a tall height on larger viewports
		// = TOTAL HEIGHT - NAV WITH A GRID-GAP MARGIN ABOVE AND BELOW.
		max-width: calc(100vh - #{($grid-gap * 2) + $navbar_overall_height});
		overflow: hidden;
	}
}
